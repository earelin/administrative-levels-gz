name: Continuous Integration

on:
  push:
    branches: [ trunk ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - id: commit
        uses: pr-mpt/actions-commit-hash@v1
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-    

      - name: Install dependencies
        run: yarn install
      - name: Linting
        run: yarn lint
      - name: Unit testing
        run: yarn test
      - name: Launching acceptance testing environment
        run: yarn start
      - name: Acceptance tests
        run: yarn acceptance-test

      - name: Google Cloud Authentication
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}
      - name: gcloud configuration
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: gcloud and Docker integration
        run: gcloud auth configure-docker europe-west2-docker.pkg.dev

      - name: Tag image
        run: docker tag administrative-levels-gz:latest europe-west2-docker.pkg.dev/earelin/admin-levels-gz/admin-levels-gz:latest
      - name: Tag latest image
        run: docker tag administrative-levels-gz:latest europe-west2-docker.pkg.dev/earelin/admin-levels-gz/admin-levels-gz:${{ steps.commit.outputs.short }}
      - name: Push image to repository
        run: docker push europe-west2-docker.pkg.dev/earelin/admin-levels-gz/admin-levels-gz:${{ steps.commit.outputs.short }}
      - name: Push latest image to repository
        run: docker push europe-west2-docker.pkg.dev/earelin/admin-levels-gz/admin-levels-gz:latest
